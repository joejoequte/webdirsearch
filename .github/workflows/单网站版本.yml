name: 单网站

on:
  workflow_dispatch:
    inputs:
      url:
        description: '需要扫描的目标网址'
        required: true
        default: 'http://example.com'
        type: string

jobs:
  run-dirsearch:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码库
      uses: actions/checkout@v3
      with:
        submodules: true  # 如果有子模块，确保一并检出

    - name: 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # 指定 Python 版本

    - name: 缓存 Python 包
      uses: actions/cache@v3
      with:
        path: |
          ~/dirsearch/venv/lib/python3.8/site-packages
          ~/.cache/pip
        key: ${{ runner.os }}-dirsearch-${{ hashFiles('dirsearch/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-dirsearch-

    - name: 克隆 Dirsearch 仓库
      run: |
        # 从 GitHub 克隆 Dirsearch 仓库
        git clone https://github.com/maurosoria/dirsearch.git

    - name: 创建虚拟环境并安装依赖
      run: |
        # 切换到 dirsearch 目录
        cd dirsearch
        # 创建虚拟环境
        python3 -m venv venv
        # 激活虚拟环境
        source venv/bin/activate
        # 升级 pip 和 setuptools
        pip install --upgrade pip setuptools
        # 安装 dirsearch 的依赖项
        pip install -r requirements.txt

    - name: 运行 Dirsearch
      env:
        TARGET_URL: ${{ github.event.inputs.url }}  # 使用输入的目标网址
      run: |
        # 激活虚拟环境
        source dirsearch/venv/bin/activate
        # 切换到 dirsearch 目录
        cd dirsearch
        # 运行 dirsearch 扫描指定的网址，使用较为常见的扩展名作为测试
        echo "开始扫描目标网址: $TARGET_URL"
        python dirsearch.py -u $TARGET_URL -e html,php,asp,aspx,jsp,txt  # 使用常见扩展名

    - name: 检查报告目录
      run: |
        # 检查 dirsearch 是否生成了报告
        if [ -d "dirsearch/reports" ]; then
          echo "报告目录存在，准备上传"
        else
          echo "报告目录不存在，请检查 dirsearch 配置"
          exit 1
        fi

    - name: 上传扫描结果
      uses: actions/upload-artifact@v4
      with:
        name: dirsearch-results
        path: dirsearch/reports/  # 上传扫描结果文件夹
